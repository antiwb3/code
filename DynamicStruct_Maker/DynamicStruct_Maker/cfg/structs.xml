
<StructDefBegin>#ifndef _STRUCT_DEF_H
#define _STRUCT_DEF_H

</StructDefBegin>

<StructDefEnd>
#endif // !_STRUCT_DEF_H
</StructDefEnd>

<StructInitBegin>#include "stdafx.h"
#include "DynamicStructMgr.h"

DynamicStructMgr& DynamicStructMgr::Instance()
{
	static DynamicStructMgr s_ins;
	return s_ins;
}

DynamicStruct const* DynamicStructMgr::Struct(unsigned int index)
{
	if (index &lt; m_struct.size())
	{
		return m_structs[index];	
	}
	return NULL;
}

int DynamicStructMgr::Init()
{
</StructInitBegin>

<StructInitEnd>
	return true;
}
</StructInitEnd>

<StructNewBegin>	{
		DynamicStruct dynStruct = new DynamicStruct();
		if (!dynStruct)
			return false;

</StructNewBegin>
<StructNewEnd>	}
</StructNewEnd>

<structs>
	<Item>
		 <MultiLine type="bool">true</MultiLine>
		 <RowSpacing  type="int">0</RowSpacing>
		 <FontSpacing  type="int">0</FontSpacing>
		 <HAlign type="bool">true</HAlign>
		 <VAlign type="bool">true</VAlign>
		 <Script type="string" size="128"></Script>
	</Item>
	<Image>
		 <MultiLine type="bool">true</MultiLine>
		 <RowSpacing  type="int">0</RowSpacing>
		 <FontSpacing  type="int">0</FontSpacing>
		 <HAlign type="bool">true</HAlign>
		 <VAlign type="bool">true</VAlign>
		 <Script type="string" size="128"></Script>
	</Image>
</structs>